{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","components/LoadingError.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","goods","sort","good1","good2","name","localeCompare","splice","getRedGoods","filter","good","color","GoodsList","className","map","style","id","LoadingError","App","state","hasLoadingError","loadGoods","callback","a","setState","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAI,GAAK,OAAIA,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAAKC,cAAcF,EAAMC,SACxEE,OAAO,EAAG,OAGJC,EAAc,WACzB,OAAOb,IACJE,MAAK,SAAAI,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,OCVhCC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,qBAAKY,UAAU,UAAf,SACE,6BACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACb,oBAEEK,MAAO,CAAEJ,MAAOD,EAAKC,OAFvB,SAIGD,EAAKL,MAHDK,EAAKM,YCTPC,EAAyB,kBACpC,qBAAKJ,UAAU,kCAAf,mDCIIK,E,4MACJC,MAAQ,CACNlB,MAAO,GACPmB,iBAAiB,G,EAGnBC,U,uCAAY,WAAOC,GAAP,eAAAC,EAAA,6DACV,EAAKC,SAAS,CACZJ,iBAAiB,IAFT,kBAMYE,IANZ,OAMFrB,EANE,OAQR,EAAKuB,SAAS,CACZvB,UATM,gDAYR,EAAKuB,SAAS,CACZJ,iBAAiB,IAbX,yD,kGAkBZ,WAAU,IAAD,OACP,EAGIK,KAAKN,MAFPlB,EADF,EACEA,MACAmB,EAFF,EAEEA,gBAGF,OACE,yBAASP,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,gCACE,sBAAKA,UAAU,UAAf,UACE,wBACEa,KAAK,SACLb,UAAU,6BACVc,QAAS,kBAAM,EAAKN,UAAU1B,IAHhC,4BAOA,wBACE+B,KAAK,SACLb,UAAU,6BACVc,QAAS,kBAAM,EAAKN,UAAUrB,IAHhC,gCAOA,wBACE0B,KAAK,SACLb,UAAU,6BACVc,QAAS,kBAAM,EAAKN,UAAUb,IAHhC,+BASDP,EACC,cAAC,EAAD,CAAWA,MAAOA,IAChB,eAEHmB,GAAmB,cAAC,EAAD,gB,GAhEdQ,IAAMC,WAwETX,IC5EfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a02e407a.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .splice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"content\">\n    <ol>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ol>\n  </div>\n);\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    An error occured when loading goods!\n  </div>\n);\n","import React from 'react';\nimport 'bulma';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { LoadingError } from './components/LoadingError';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    hasLoadingError: false,\n  };\n\n  loadGoods = async (callback: () => Promise<Good[]>) => {\n    this.setState({\n      hasLoadingError: false,\n    });\n\n    try {\n      const goods = await callback();\n\n      this.setState({\n        goods,\n      });\n    } catch (error) {\n      this.setState({\n        hasLoadingError: true,\n      });\n    }\n  };\n\n  render() {\n    const {\n      goods,\n      hasLoadingError,\n    } = this.state;\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Dynamic list of goods</h1>\n\n          <div>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-info is-outlined\"\n                onClick={() => this.loadGoods(getAll)}\n              >\n                Load all goods\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-info is-outlined\"\n                onClick={() => this.loadGoods(get5First)}\n              >\n                Load 5 first goods\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-info is-outlined\"\n                onClick={() => this.loadGoods(getRedGoods)}\n              >\n                Load red goods\n              </button>\n            </div>\n\n            {goods ? (\n              <GoodsList goods={goods} />\n            ) : 'No goods yet'}\n\n            {hasLoadingError && <LoadingError />}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}